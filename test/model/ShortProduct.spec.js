/**
 * Swappy REST API
 * This is Swappy's REST API. See below for all available endpoints. This is an <strong>alpha version</strong> and might still be subject to change
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwappyRestApi);
  }
}(this, function(expect, SwappyRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwappyRestApi.ShortProduct();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ShortProduct', function() {
    it('should create an instance of ShortProduct', function() {
      // uncomment below and update the code to test ShortProduct
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be.a(SwappyRestApi.ShortProduct);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property seller (base name: "seller")', function() {
      // uncomment below and update the code to test the property seller
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property auction (base name: "auction")', function() {
      // uncomment below and update the code to test the property auction
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property dateEnd (base name: "date_end")', function() {
      // uncomment below and update the code to test the property dateEnd
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property live (base name: "live")', function() {
      // uncomment below and update the code to test the property live
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property startingPrice (base name: "starting_price")', function() {
      // uncomment below and update the code to test the property startingPrice
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property reservePrice (base name: "reserve_price")', function() {
      // uncomment below and update the code to test the property reservePrice
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property buynowPrice (base name: "buynow_price")', function() {
      // uncomment below and update the code to test the property buynowPrice
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property lotNumber (base name: "lot_number")', function() {
      // uncomment below and update the code to test the property lotNumber
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property delivery (base name: "delivery")', function() {
      // uncomment below and update the code to test the property delivery
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property payment (base name: "payment")', function() {
      // uncomment below and update the code to test the property payment
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property autoRenew (base name: "auto_renew")', function() {
      // uncomment below and update the code to test the property autoRenew
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property taxes (base name: "taxes")', function() {
      // uncomment below and update the code to test the property taxes
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property estimate (base name: "estimate")', function() {
      // uncomment below and update the code to test the property estimate
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property offer (base name: "offer")', function() {
      // uncomment below and update the code to test the property offer
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instane = new SwappyRestApi.ShortProduct();
      //expect(instance).to.be();
    });

  });

}));
